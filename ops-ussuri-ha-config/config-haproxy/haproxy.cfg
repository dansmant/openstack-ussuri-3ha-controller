#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   https://www.haproxy.org/download/1.8/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

    # utilize system-wide crypto-policies
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-server-ciphers PROFILE=SYSTEM

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    tcp
    log                     global
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

listen monitor
    bind 10.19.33.15:9300
    mode http
    monitor-uri /status
    stats enable
    stats uri /admin
    stats realm Haproxy\ Statistics
    stats auth admin:password
    stats refresh 15s

frontend hap-ip
    bind 10.19.33.15:3306
    timeout client 90m
    default_backend db-vms-galera

backend db-vms-galera
    option httpchk
    stick-table type ip size 1000
    stick on dst
    timeout server 90m
    server controller1 10.19.33.11:3306 check inter 1s port 9200 backup on-marked-down shutdown-sessions
    server controller2 10.19.33.12:3306 check inter 1s port 9200 backup on-marked-down shutdown-sessions
    server controller3 10.19.33.13:3306 check inter 1s port 9200 backup on-marked-down shutdown-sessions

listen rabbitmq_cluster 
    mode tcp
    bind 10.19.33.15:4369
    bind 10.19.33.15:25672
    bind 10.19.33.15:15672
    balance roundrobin
    #stick-table type ip size 1000
    #stick on dst
    #timeout server 90m
    server controller1-port-4369 10.19.33.11:4369 check inter 5000 rise 2 fall 3
    server controller2-port-4369 10.19.33.12:4369 check inter 5000 rise 2 fall 3
    server controller3-port-4369 10.19.33.13:4369 check inter 5000 rise 2 fall 3
    server controller1-port-25672 10.19.33.11:25672 check inter 5000 rise 2 fall 3
    server controller2-port-25672 10.19.33.12:25672 check inter 5000 rise 2 fall 3
    server controller3-port-25672 10.19.33.13:25672 check inter 5000 rise 2 fall 3
    server controller1-port-15672 10.19.33.11:15672 check inter 5000 rise 2 fall 3
    server controller2-port-15672 10.19.33.12:15672 check inter 5000 rise 2 fall 3
    server controller3-port-15672 10.19.33.13:15672 check inter 5000 rise 2 fall 3


listen rabbitmq_cluster_openstack
    mode tcp
    bind 10.19.33.15:5672
    balance roundrobin
    #stick-table type ip size 1000
    #stick on dst
    #timeout server 90m
    server controller1 10.19.33.11:5672 check inter 5000 rise 2 fall 3
    server controller2 10.19.33.12:5672 check inter 5000 rise 2 fall 3
    server controller3 10.19.33.13:5672 check inter 5000 rise 2 fall 3

frontend http-in
    # listen 80 port
    bind 10.19.33.15:80
    #bind 10.19.33.15:443
    # set default backend
    default_backend    backend_servers
    # send X-Forwarded-For header
    option             forwardfor

# define backend
backend backend_servers
    # balance with roundrobin
    balance            roundrobin
    # define backend servers
    server     	controller1-80 10.19.33.11:80 check
    server	controller2-80 10.19.33.12:80 check
    server	controller3-80 10.19.33.13:80 check
    #server      controller1-443 10.19.33.11:443 check
    #server      controller2-443 10.19.33.12:443 check
    #server      controller3-443 10.19.33.13:443 check
	
#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
#frontend main
#    bind *:5000
#    acl url_static       path_beg       -i /static /images /javascript /stylesheets
#    acl url_static       path_end       -i .jpg .gif .png .css .js

#    use_backend static          if url_static
#    default_backend             app

#---------------------------------------------------------------------
# static backend for serving up images, stylesheets and such
#---------------------------------------------------------------------
#backend static
#    balance     roundrobin
#    server      static 127.0.0.1:4331 check

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
#backend app
#    balance     roundrobin
#    server  app1 127.0.0.1:5001 check
#    server  app2 127.0.0.1:5002 check
#    server  app3 127.0.0.1:5003 check
#    server  app4 127.0.0.1:5004 check
